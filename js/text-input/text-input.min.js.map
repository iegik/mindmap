{
  "version": 3,
  "sources": ["../../../src/view.ts", "../../../src/text-input/text-input.ts"],
  "sourcesContent": ["class Ref {\n  toString() {\n    const id = Math.round(Math.random() * 1000000).toString(36);\n    return (this.id = this.id || `ref-${id}`);\n  }\n  get current() {\n    return document.querySelector(`[ref=${this.id}]`);\n  }\n}\n\nexport const createRef = () => new Ref();\n\nexport function useRef() {\n  this.ref = this.ref || new Ref();\n  return this.ref;\n}\n", "import { createRef } from '@app/view';\n\ninterface ITextInput extends IComponent {\n  value?: string;\n  onChange?: (event: KeyboardEvent) => void;\n  multiline?: boolean;\n}\n\nconst TextInput = (props: ITextInput) => {\n  const { value, className = '', onChange, multiline } = props;\n  const ref = createRef();\n\n  setTimeout(() => {\n    if (onChange) {\n      ref.current.addEventListener('input', onChange);\n      ref.current.addEventListener('blur', onChange);\n    }\n  });\n\n  if (multiline) {\n    return `<textarea class=\"${className} text-input text-input--multiline\" ref=\"${ref}\">${value}</textarea>`;\n  }\n\n  return `<input class=\"${className} text-input\" value=\"${value}\" ref=\"${ref}\" />`;\n};\n\nexport default TextInput;\n"],
  "mappings": "MAAA,WAAU,CACR,UAAW,CACT,GAAM,GAAK,KAAK,MAAM,KAAK,SAAW,KAAS,SAAS,IACxD,MAAQ,MAAK,GAAK,KAAK,IAAM,OAAO,OAElC,UAAU,CACZ,MAAO,UAAS,cAAc,QAAQ,KAAK,SAIlC,EAAY,IAAM,GAAI,GCFnC,GAAM,GAAY,AAAC,GAAsB,CACvC,GAAM,CAAE,QAAO,YAAY,GAAI,WAAU,aAAc,EACjD,EAAM,IASZ,MAPA,YAAW,IAAM,CACf,AAAI,GACF,GAAI,QAAQ,iBAAiB,QAAS,GACtC,EAAI,QAAQ,iBAAiB,OAAQ,MAIrC,EACK,oBAAoB,4CAAoD,MAAQ,eAGlF,iBAAiB,wBAAgC,WAAe,SAGlE,EAAQ",
  "names": []
}
